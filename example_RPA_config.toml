# This section is used to define the antenna, where the type, frequency, inter-element spacing, and size of the array can be set.
[antenna]
type = "RectangularPlanar" # Or, "UniformLinear, SimpleULA, Circular"
frequency = 30e9 # In Hz
spacing = [0.005, 0.005] # in meters, for each axis
num_elements = [4, 4] # Number of elements, for each axis

# This section defines the simulation parameters.
[parameters]
samples = 300 # The number of angular samples for each axis (in u,v or spherical)
max_steps = 50 # The number of steps the PSO takes before stopping
num_clusters = 8 # The number of clusters generated by k-means clustering, analagous to the number of RF chains available. Set to 0 to disable.
phase_bit_depth = 0 # Number of bits used for phase quantisation. Set to 0 to disable.
num_subswarms = 8 # The number of subswarms used by PSO
subswarm_size = 16 # The number of particles within the subswarm.
subswarm_init_radius = 0.2 # The radius that particles are distributed about within a subswarm.
dois = [[-0.25, 0.3, 0.1], [0.25, -0.3, 0.2]] #Directions of Interest
dnois = [[0, 0, 0.131], [-0.524, 0.175, 0.131]] # Directions Not of Interest
particle_inertia_weight = 0.5 # Inertia weight of the particle
centroid_velocity_coeff = 0.5  # Coefficient controlling how much the velocity assigned to a subswarm is propagated to its particles
social_coeff = 0.2 # Coefficient controlling how much a particle is influenced toward the best-scoring particle within the subswarm
subswarm_charge = 0.1 # The charge of the subswarm, used in the
max_particle_velocity = 4 # Maximum particle velocity, set to sqrt(num_elements), to scale with distance measure as dimensionality increases
rerandomisation_proximity = 0.05 # How close two subswarms are to trigger rerandomisation
mse_target_levels = [0, -10, -30] #The target levels used for MSE objective function. In the format [DOI, other, DNOI]

# This section is used to control how the program outputs data.
[logging]
show_plots = true # Whether plots are shown
plots_persist = false # Whether the plots automatically close after the simulation finishes
verbose = true # Whether values are outputted as the PSO progresses
write_results = true # Whether the results are written to a .csv file
